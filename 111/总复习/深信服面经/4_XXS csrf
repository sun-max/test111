1.XXS全称Cross site Scripting，名为跨站脚本攻击，黑客将恶意脚本代码植入页面中从而实现盗取用户信息等操作

常见的攻击场景：
（1）用户A访问安全网站B，然后用户c发现B网站存在XXS漏洞。此时c向A发送了一封邮件，里面包含恶意脚本的URL地址
（此URL地址地址还是网站B的地址，只是路径上有恶意脚本），当用户点击访问时，因为网站B中cookie含有用户的敏感信息，
此时用户C就可以利用脚本在受信任的情况下获取用户A的cookie信息，以及进行一些恶意操作。这种攻击叫做反射性XXS
(2)假设网站B是一个博客网站，恶意用户C在存在XXS漏洞的网站B发布了一篇文章，文章中存在一些恶意脚本，例如img标签，
script标签等，这篇博客必然会存入数据库中，当其他用户访问该文章时恶意脚本就会执行，进行恶意操作。这种攻击方式
叫做持久性XXS，将携带的脚本数据存入数据库，之后又由后台返回。

预防措施：
（1）对输入，输出结果进行过滤和必要的转义
（2）尽量使用post，使用get方式时对路径长度进行限制
（3）使用httponly禁止黑客通过脚本获取用户cookie数据，但这样无法完全阻止xss攻击，因为发送http请求不需要主动获取cookie

CSRF全称cross-cite request forgery，名为跨站请求伪造，即黑客伪装成用户身份来执行一些非用户自愿的恶意以及非法操作
常见的攻击场景：
（1）用户A经常访问博客网站B，用户C发现网站B存在CSRF漏洞，想尽办法勾引用户A访问了C写好的危险网站D，而此时用户A道德cookie信息没有失效，危险网站D有向
网站B请求的非法操作，这样用户在不知情的情况下就被操控了。这个时候就会有一个疑问，浏览器本身有同源策略。为什么在网站D中还可以请求网站的API，
要记住浏览器对img，iframe，script的src是没有同源限制的，所以黑客完全可以利用动态添加这些元素的标签来实现跨站请求

预防措施：
1.验证码
2，tokenid令牌
3.判断请求的referer是否正确

CSRF和XSS的区别：
1.CSRF需要登录后操作，xss不需要
2.csrf是请求页面api来实现非法操作，xss是向当前页面植入js脚本来修改页面内容。

